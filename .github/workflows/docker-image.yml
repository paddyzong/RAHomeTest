name: Build and Push Multiple Images to ECR Public

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push-multiple:
    runs-on: ubuntu-latest
    environment: docker-register 
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2  
          
      - name: Login to ECR Public
        run: |
          aws ecr-public get-login-password --region us-east-1 \
            | docker login --username AWS --password-stdin public.ecr.aws/y2c8v6k4

      - name: Delete Old ECR Public Images
        run: |
          # List all images 
          old_images=$(aws ecr-public describe-images \
            --region us-east-1 \
            --repository-name paddy/backend \
            --query 'imageDetails[?imageTags == null || contains(imageTags, `latest`)].[imageDigest]' \
            --output text)

          # Loop through each old image digest and delete
          for digest in $old_images; do
            echo "Deleting image with digest: $digest"
            aws ecr-public batch-delete-image \
              --region us-east-1 \
              --repository-name paddy/backend \
              --image-ids imageDigest=$digest
          done
          
      # Build and push Backend image
      - name: Build Backend Image
        run: |
            # echo "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}" > ./Backend/RATypeInfer/.env.production
            # echo "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> ./Backend/RATypeInfer/.env.production
            # echo "AWS_REGION=ap-southeast-2" >> ./Backend/RATypeInfer/.env.production
            # echo "S3_BUCKET_NAME=rahometest-frontend-bucket" >> ./Backend/RATypeInfer/.env.production
            # echo "Listing files in ./Backend/RATypeInfer:"
            # ls -la ./Backend/RATypeInfer

            # # Print the contents of .env.production for verification
            # echo "Contents of .env.production:"
            # cat ./Backend/RATypeInfer/.env.production

            echo "Build backend image"
            docker build --build-arg AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }} \
                  --build-arg AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }} \
                  --build-arg AWS_REGION=ap-southeast-2 \
                  --build-arg S3_BUCKET_NAME=rahometest-frontend-bucket \
                  -t backend:latest ./Backend/RATypeInfer
            docker tag backend:latest public.ecr.aws/y2c8v6k4/paddy/backend:latest
            docker push public.ecr.aws/y2c8v6k4/paddy/backend:latest

      # Build and push Frontend image
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Build the frontend
        run: |
          cd ./Frontend/data-inference-app
            echo "REACT_APP_API_BASE_URL=https://api.rahometest.click" > .env.production
            echo "REACT_APP_IS_AWS=true" >> .env.production
          npm install
          npm run build
        env:
          CI: false

      - name: Deploy to S3
        run: |
          aws s3 sync ./Frontend/data-inference-app/build s3://${{ secrets.AWS_S3_BUCKET_NAME }} --delete
